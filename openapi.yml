openapi: 3.1.0
info:
  title: API Besson documenation
  version: 1.0.0
paths:
  /baskets/calculate:
    post:
      tags:
        - Basket
      summary: Calcul du panier
      description: "Calcul du panier client via l'appel du web service de Capinfo"
      requestBody:
        required: true
        content:
          text/json:
            schema:
              $ref: '#/components/schemas/BasketsCalculate'
            examples:
              With all informations:
                value:
                  customerCardNumber: '9980003977435'
                  storeId: '195'
                  language: 'FR'
                  articles: 
                    - sku: "999201969999"
                      quantity: 1
                      price: 4.99
                    - sku: "220146301304"
                      quantity: 1
                      price: 49.99
                    - sku: "220146301305"
                      quantity: 1
                      price: 69.99
                  coupons:
                    - "AVANTAGE_BIENVENUE"
                    - "AVANTAGE-10%_150POINTS"
                    - "AVANTAGE-5%_75POINTS"
                    - "ac102"
      responses:
        '200':
          description: OK
          content:
            text/json:
              examples:
                Ok response:
                  value:
                      footer:
                          dataAnimations: "1#999#68#10,297#AVANTAGE-10%_150POINTS#1####-1#10,297;1#999#71#4,6335#AVANTAGE-5%_75POINTS#1####-1#4,6335"
                          dataOperations: ""
                          amount: 14.93
                      articles:
                        - id: "999201969999"
                          quantity: 1
                          price: 4.99
                          dataAnimations: ""
                          dataOperations: ""
                          lineDiscount: 0
                          footerDiscount: 0.73
                        - id: "220146301304"
                          quantity: 1
                          price: 49.99
                          dataAnimations: ""
                          dataOperations: "1#999#29#4,999#10%SUP_WSHOP#1####-1#4,999"
                          lineDiscount: 5
                          footerDiscount: 6.52
                        - id: "220146301305"
                          quantity: 1
                          price: 69.99
                          dataAnimations: "1#999#36#10#AVANTAGE_BIENVENUE#1####-1#10"
                          dataOperations: "1#999#29#6,999#10%SUP_WSHOP#1####-1#6,999"
                          lineDiscount: 17
                          footerDiscount: 7.68
                      coupons:
                        - coupon: "AVANTAGE_BIENVENUE"
                          used: true
                          label: "Avantage Bienvenue"
                        - coupon: "AVANTAGE-10%_150POINTS"
                          used: true
                          label: "Avantage 10% - 150 points"
                        - coupon: "AVANTAGE-5%_75POINTS"
                          used: true
                          label: "Avantage 5% - 75 points"
                        - coupon: "ac102"
                          used: true
                          label: "Réduction ac102"
                      offers:
                        - name: "AVANTAGE_BIENVENUE"
                          coupon: "jeib7ilj"
                          discount: 12
                          label: "Réduction 10% WSHOP"
                          removable: false
                        - name: "AVANTAGE-10%_150POINTS"
                          coupon: "14er25er"
                          discount: 10
                          label: "Avantage Bienvenue"
                          removable: true
                        - name: "AVANTAGE-5%_75POINTS"
                          coupon: "jose4551"
                          discount: 10.3
                          label: "Avantage 10% - 150 points"
                          removable: true
  /check-email:
    post:
      tags:
      - check-email
      summary: Verification de la delivrabilité d'un mail
      description: Verification de la delivrabilité d'un mail et s'il n'est pas jetable.
      requestBody:
        content:
          text/json:
            schema:
              properties:
                email:
                  type: string
                  examples:
                    - prenom.nom@email.com
      responses:
        '200':
          description: OK
          content:
            text/json:
              examples:
                Autocorrect:
                  value:
                    autocorrect: prenom.nom@gmail.com
        '204':
          description: No content
        '400':
          description: Bad Request
          content:
            text/json:
              examples:
                UNDELIVERABLE_EMAIL:
                  value:
                    errors:
                      msg:
                        Email addresses is undelivrable
                      code:
                        UNDELIVERABLE_EMAIL
                DISPOSABLE_EMAIL:
                  value:
                    errors:
                      msg:
                        Disposable email addresses are not allowed
                      code:
                        DISPOSABLE_EMAIL
                EMAIL_REQUIRED:
                  value:
                    errors:
                      msg: 
                        'Missing required field: email'
                      code:
                        EMAIL_REQUIRED
                INVALID_EMAIL_FORMAT:
                  value:
                    errors:
                      msg:
                        Invalid email format
                      code:
                        INVALID_EMAIL_FORMAT
  /customers:
    get:
      tags:
        - Customers
      summary: Rechercher des clients
      description: ''
      parameters:
        - name: email
          in: query
          description: Email du client
          required: false
          schema:
            type: string
        - name: email[contains]
          in: query
          description: Tout ou partie de l'Email du client
          required: false
          schema:
            type: string
        - name: take
          in: query
          description: Nombre d'éléments à afficher (1-50)
          required: false
          schema:
            type: integer
        - name: page
          in: query
          description: Numéro de la page de données à afficher (>0)
          required: false
          schema:
            type: integer
        - name: emailMD5
          in: query
          description: Email MD5 du client
          required: false
          schema:
            type: string
        - name: firstname
          in: query
          description: Prénom du client
          required: false
          schema:
            type: string
        - name: firstname[contains]
          in: query
          description: Tout ou partie du Prénom du client
          required: false
          schema:
            type: string
        - name: lastname
          in: query
          description: Nom du client
          required: false
          schema:
            type: string
        - name: lastname[contains]
          in: query
          description: Tout ou partie du Nom du client
          required: false
          schema:
            type: string
        - name: postalCode
          in: query
          description: Code Postal du client
          required: false
          schema:
            type: string
        - name: cardNumber
          in: query
          description: Code carte fidélité du client
          required: false
          schema:
            type: string
        - name: birthday
          in: query
          description: Date de naissance du client (YYYY-MM-DD)
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: Accepte nom, prénom, email, numéro de téléphone, numéro de fidélité, code postal et date de naissance pour rechercher les clients correspondants. Possibilité de passer deux arguments séparés par un espace (nom / prenom, nom / code postal, prenom / code postal)
          schema:
            type: string
        - name: lead
          in: query
          description: Paramètre qui doit être "true" pour renvoyer les prospect.
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            text/json:
              examples:
                Ok response:
                  value:
                    - customers:
                        - id: "329639"
                          firstname: JOHN
                          lastname: DOE
                          phoneNumber: "+33600000000"
                          email: "john.doe@email.com"
                          postalcode: "53000"
                        - id: "329639"
                          firstname: JOHN
                          lastname: DOE
                          phoneNumber: "+33600000000"
                          email: "john.doe@email.com"
                          postalcode: "53000"
        '404':
          description: Not found
          content:
            text/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        msg:
                          type: string
                          examples:
                            - No customers found
    post:
      tags:
        - Customers
      summary: Créer un nouveau client
      description: ''
      requestBody:
        required: true
        description: >-
          Créer un nouveau client ou prospect. Création en parallèle dans
          Cashfid et Splio (mobile wallet).
        content:
          text/json:
              schema:
                $ref: '#/components/schemas/CustomerCreate'
              examples:
                With delivery address:
                  value:
                    keycloakId: "00070180-d169-4a60-975b-028f8cdc1e2b"
                    storeId: '195'
                    gender: male
                    firstname: John
                    lastname: Doe
                    phoneNumber: "+33600000000"
                    otpinEmail: true
                    optinPhone: false
                    source: myEnterprise
                    email: john.doe@mail.com
                    activationDate: '2024-07-17'
                    activate: true
                    billingAddress:
                      address1: 1 avenue des frères montgolfier
                      address2: null
                      city: Aubière
                      postalCode: '63170'
                      countryCode: FR
                    deliveryAddress:
                      address1: 1 avenue des frères montgolfier
                      address2: null
                      city: Aubière
                      postalCode: '63170'
                      countryCode: FR
                Without delivery address:
                  value:
                    keycloakId: "00070180-d169-4a60-975b-028f8cdc1e2b"
                    cardNumber: '9980007395396'
                    storeId: '195'
                    gender: 'male'
                    firstname: John
                    lastname: Doe
                    birthday: 2000-01-01
                    phoneNumber: '+33600000000'
                    optinEmail: true
                    optinPhone: false
                    optinDematerialization: yes
                    email: john.doe@mail.com
                    source: myEnterprise
                    activationDate: '2024-07-17'
                    activate: true
                    billingAddress:
                      address1: 1 avenue des frères montgolfier
                      address2: null
                      city: Aubière
                      postalCode: '63170'
                      countryCode: FR

      responses:
        '201':
          description: Created
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse201'
              examples:
                With delivery address:
                  value:
                    id: "4733330"
                    cardNumber: "9980003979057"
                    storeId: "195"
                    gender: male
                    firstname: John
                    lastname: Doe
                    phoneNumber: '+33600000000'
                    optinEmail: true
                    optinPhone: false
                    optinDematerialization: null
                    source: myEnterprise
                    email: john.doe@mail.com
                    billingAddresses:
                      - id: "3828813"
                        address1: 1 avenue des frères montgolfier
                        address2: null
                        city: Aubière
                        postalCode: '63170'
                        countryCode: FR
                    deliveryAddresses:
                      - id: "3828813"
                        address1: 1 avenue des frères montgolfier
                        address2: null
                        city: Aubière
                        postalCode: '63170'
                        countryCode: FR
                Without delivery address:
                  value:
                    id: "4733330"
                    cardNumber: "9980003979057"
                    storeId: "195"
                    gender: male
                    firstname: John
                    lastname: Doe
                    phoneNumber: '+33600000000'
                    optinEmail: true
                    optinPhone: false
                    optinDematerialization: yes
                    source: myEnterprise
                    email: john.doe@mail.com
                    billingAddresses:
                      id: "3828813"
                      address1: 1 avenue des frères montgolfier
                      address2: null
                      city: Aubière
                      postalCode: '63170'
                      countryCode: FR
        '400':
          description: Bad Request
          content:
            text/json:
              examples:
                Invalid phone number for the country:
                  value:
                    errors:
                      - msg: "Phone Number is invalid for this country"
                        code: "INVALID_PHONE_NUMBER"
                No email found in email:
                  value:
                    errors:
                      - msg: Invalid value
                        param: email
                        location: body
                        value: test.test.fr
        '422':
          description: Unprocessable Entity
          content:
            text/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        msg:
                          type: string
                          examples:
                            - Le compte client existe déjà (email en doublon)
  /customers/{customerId}:
    get:
      tags:
        - Customers
      summary: Retourne les informations d'un client
      description: Retourne les informations du client dont le codeclient est passé en paramètre dans la requête.
      parameters:
        - name: customerId
          in: path
          description: code client du client à afficher
          required: true
          schema:
            type: integer
        - name: source
          in: query
          required: false
          schema:
            type: string
        - name: country
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/json:
              examples:
                With query parameters:
                  value:
                    gender: male
                    firstname: JEAN
                    lastname: DUPONT
                    birthday: 1990-04-28
                    phonenumber: "+33685245478"
                    email: "john.doe@example"
                    cardnumber: "9981231231234"
                    optinEmail: false
                    optinhone: true
                    billingAddresses: 
                      - id: "328456"
                        address1: 1 Av. des Frères Montgolfier
                        address2: 1 Av. des Frères
                        city: Aubiere
                        postalCode: "63170"
                        countryCode: FR
                      - id: "328456"
                        address1: 1 Av. des Frères Montgolfier
                        address2: 1 Av. des Frères
                        city: Aubiere
                        postalCode: "63170"
                        countryCode: FR
                    deliveryAddresses:
                      - id: "328456"
                        address1: 1 Av. des Frères Montgolfier
                        address2: 1 Av. des Frères
                        city: Aubiere
                        postalCode: "63170"
                        countryCode: FR
    patch:
      tags:
        - Customers
      summary: Modifier un client
      description: ''
      requestBody:
        description: >-
          Modifier un client. Envoi mail adhesion Splio (mobile wallet) si besoin.
        required: true
        content:
          text/json:
            schema:
              $ref: '#/components/schemas/CustomerPatch'
            examples:
              With country verification:
                value:
                  keycloakId: "00070180-d169-4a60-975b-028f8cdc1e2b"
                  countryCodeVerification: FR
                  gender: male
                  firstname: John
                  lastname: Doe
                  phoneNumber: "+33600000000"
                  optinEmail: true
                  optinPhone: false
                  source: myEnterprise
                  email: john.doe@email.com
                  activationDate: '2024-07-17'
              Without country verification:
                value: 
                  keycloakId: "00070180-d169-4a60-975b-028f8cdc1e2b"
                  gender: female
                  firstname: John
                  lastname: Doe
                  birthday: '2000-01-01'
                  phoneNumber: "+33600000000"
                  optinEmail: true
                  optinPhone: false
                  optinDematerialization: yes
                  email: test@mail.com
                  source: myEnterprise
                  activationDate: '2024-07-17'
                  billingAdddress:
                    address1: 1 avenue des frères montgolfier
                    address2: null
                    city: Aubière
                    postalCode: '63170'
                    countryCode: FR
      responses:
        '200':
          description: OK
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse201'
              examples:
                With country verification:
                  value:
                    id: "329639"
                    cardNumber: "9991323279802"
                    storeId: "195"
                    gender: male
                    firstname: JEAN
                    lastname: DUPONT
                    birthday: 1990-04-28
                    phonenumber: "+33685245478"
                    email: "john.doe@example"
                    cardnumber: "9981231231234"
                    optinEmail: false
                    optinhone: true
                    billingAddresses: 
                      - id: "328456"
                        address1: 1 Av. des Frères Montgolfier
                        address2: 1 Av. des Frères
                        city: Aubiere
                        postalCode: "63170"
                        countryCode: FR
                      - id: "328456"
                        address1: 1 Av. des Frères Montgolfier
                        address2: 1 Av. des Frères
                        city: Aubiere
                        postalCode: "63170"
                        countryCode: FR
                    deliveryAddresses:
                      - id: "328456"
                        address1: 1 Av. des Frères Montgolfier
                        address2: 1 Av. des Frères
                        city: Aubiere
                        postalCode: "63170"
                        countryCode: FR
                Without country verification:
                  value:
                    id: "329639"
                    cardNumber: "9991323279802"
                    storeId: "195"
                    gender: male
                    firstname: JEAN
                    lastname: DUPONT
                    birthday: 1990-04-28
                    phonenumber: "+33685245478"
                    email: "john.doe@example"
                    cardnumber: "9981231231234"
                    optinEmail: false
                    optinhone: true
                    billingAddresses: 
                      id: "328456"
                      address1: 1 Av. des Frères Montgolfier
                      address2: 1 Av. des Frères
                      city: Aubiere
                      postalCode: "63170"
                      countryCode: FR
        '400':
          description: Bad Request
          content:
            text/json:
              examples:
                Invalid phone number for the country:
                  value:
                    errors:
                      - msg: "Phone Number is invalid for this country"
                        code: "INVALID_PHONE_NUMBER"
                No email found in email:
                  value:
                    errors:
                      - msg: Invalid value
                        param: email
                        location: body
                        value: test.test.fr
        '422':
          description: Unprocessable Entity
          content:
            text/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        msg:
                          type: string
                          examples:
                            - Le compte client existe déjà (email en doublon)
    delete:
      tags:
        - Customers
      summary: Supprimer un client
      description: Supprime le client dont le code client est passé en paramètre.
      parameters:
        - name: customerId
          in: path
          description: code client du client à supprimer
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No content
        '404':
          description: Not found
          content:
            text/json:
              examples:
                Customer Not Found:
                  value:
                    errors:
                      msg:
                        The customer does not exist
  /customers/{customerId}/addresses:
    post:
      tags:
        - Customers addresses
      summary: Créer une adresse client
      description: ''
      parameters:
        - name: customerId
          in: path
          description: code client du client auquel on crée une adresse
          required: true
          schema:
            type: integer
      requestBody:
        description: >-
          Ajouter une adresse à un client existant.
        content:
          text/json:
            schema:
              $ref: '#/components/schemas/CustomerAddressPost'
        required: true
      responses:
        '204':
          description: No content
        '404':
          description: Not found
          content:
            text/json:
              examples:
                Customer Not Found:
                  value:
                    errors:
                      msg:
                        The customer does not exist
        '400':
          description: Bad Request
          content:
            text/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        msg:
                          type: string
                          examples:
                            - Country code must be of two characters (ISO 2 country code)
                        param:
                          type: string
                          examples:
                            - countryCode
                        location:
                          type: string
                          examples:
                            - body
                        value:
                          type: string
                          examples:
                            - FRA
        '422':
          description: Unprocessable Entity
          content:
            text/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        msg:
                          type: string
                          examples:
                            - There can only have five billing address and five shipping addresses for each client.
  /customers/{cardNumber}/animations:
     get:
      tags:
        - Customers animations
      summary: Retourne les informations d'un client
      description: Retourne les informations du client dont le codeclient est passé en paramètre dans la requête.
      parameters:
        - name: language
          in: query
          description: Langue de l’utilisateur (fr/es/en)
          required: false
          schema:
            type: string
            default: fr
        - name: storeId
          in: query
          description: Numéro de magasin qui sera utilisé pour checker les animations du client
          required: false
          schema:
            type: integer
            default: fr
      responses:
        '200':
          description: OK
          content:
            text/json:
              examples:
                With animations:
                  value:
                    animations: 
                      - code: "AVANTAGE_VIP"
                        title: "-10% sur l'entretien"
                        image: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/offers/offre%20VIP%20noir.png"
                      - code: "AVANTAGE-5%_75POINTS"
                        title: "-5% pour 75 points"
                        image: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/offers/offre%2075%20coeurs%20noir.png"
                      - code: "MARO_30"
                        title: "-30% sur la maroquinerie"
                        image: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/offers/default.png"
        '404':
          description: Not found
          content:
            text/json:
              examples:
                Customer Not Found:
                  value:
                    errors:
                      msg:
                        Customer not found
                      code:
                        NOT_FOUND
        '422':
          description: Unprocessable Entity
          content:
            text/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        msg:
                          type: string
                          examples:
                            - CashFid Invalid response
  /customers/{customerId}/addresses/{addressId}:
    put:
      tags:
        - Customers addresses
      summary: Modifier une adresse client
      description: ''
      parameters:
        - name: customerId
          in: path
          description: code client du client à afficher
          required: true
          schema:
            type: integer
        - name: addressId
          in: path
          description: id de l'adresse à afficher
          required: true
          schema: 
            type: integer
      requestBody:
        description: >-
          Modifier l'adresse d'un client existant.
        content:
          text/json:
            schema:
              $ref: '#/components/schemas/CustomerAddressPut'
        required: true
      responses:
        '204':
          description: No content
        '404':
          description: Not found
          content:
            text/json:
              examples:
                Customer Not Found:
                  value:
                    errors:
                      msg:
                        The customer does not exist
                Address Not Found:
                  value:
                    errors:
                      msg:
                        The address does not exist
        '400':
          description: Bad Request
          content:
            text/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        msg:
                          type: string
                          examples:
                            - Country code must be of two characters (ISO 2 country code)
                        param:
                          type: string
                          examples:
                            - countryCode
                        location:
                          type: string
                          examples:
                            - body
                        value:
                          type: string
                          examples:
                            - FRA
        '422':
          description: Unprocessable Entity
          content:
            text/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        msg:
                          type: string
                          examples:
                            - There can only have five billing address and five shipping addresses for each client.
  /customers/{customerId}/modify-points:
    post:
      tags:
        - Customers
      summary: Modifier les points d'un client
      description: Ajoute aux points du client dont le code client est passé en paramètre les points fournis dans le body.
      parameters:
        - name: customerId
          in: path
          description: code client du client à modifier
          required: true
          schema:
            type: integer
      requestBody:
        content:
          text/json:
            schema:
              $ref: '#/components/schemas/CustomerModifyPoints'
      responses:
        '204':
          description: No content
        '404':
          description: Not found
          content:
            text/json:
              examples:
                Customer Not Found:
                  value:
                    errors:
                      msg:
                        The customer does not exist
  /customers/{customerId}/subscriptions:
    get:
      tags:
        - Customers subscriptions
      summary: Retourne les souscriptions du client
      description: ''
      parameters:
        - name: customerId
          in: path
          description: uuid du client à afficher
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/json:
              schema:
                type: object
                properties:
                  optinEmail:
                    type: boolean
                  optinPhone:
                    type: boolean
                  optinFidelity:
                    type: boolean
                  optinWomenNews:
                    type: boolean
                  optinGoodDeals:
                    type: boolean
                    example: false
                  optinWebExclusives:
                    type: boolean
                  optinStoreNews:
                    type: boolean
                  optinMenNews:
                    type: boolean
                    example: false
                  optinBfcNews:
                    type: boolean
                  optinChildrenNews:
                    type: boolean
        '404':
          description: Not found
          content:
            text/json:
              examples:
                Customer Not Found:
                  value:
                    errors:
                      msg:
                        Customer not found
        '400':
          description: Bad Request
          content:
            text/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        msg:
                          type: string
                          examples:
                            - Identifier in URL must be an Uuid
                        param:
                          type: string
                          examples:
                            - uuid
                        location:
                          type: string
                          examples:
                            - params
                        value:
                          type: string
                          examples:
                            - d037420a-7097-4e80-b877-e5cc2e41eber
    post:
      tags:
        - Customers subscriptions
      summary: Renseigne les souscriptions du client
      description: ''
      parameters:
        - name: customerId
          in: path
          description: uuid du client à afficher
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/json:
            schema:
              $ref: '#/components/schemas/PostCustomerSubscriptions'
            examples:
              Prospect:
                value:
                  optinEmail: true
                  optinPhone: true
                  optinFidelity: true
                  optinWomenNews: true
                  optinGoodDeals: false
                  optinWebExclusives: true
                  optinStoreNews: true
                  optinMenNews: false
                  optinBfcNews: true
                  optinChildrenNews: true
      responses:
        '200':
          description: OK
          content:
            text/json:
              schema:
                type: object
                properties:
                  optinEmail:
                    type: boolean
                  optinPhone:
                    type: boolean
                  optinFidelity:
                    type: boolean
                  optinWomenNews:
                    type: boolean
                  optinGoodDeals:
                    type: boolean
                    example: false
                  optinWebExclusives:
                    type: boolean
                  optinStoreNews:
                    type: boolean
                  optinMenNews:
                    type: boolean
                    example: false
                  optinBfcNews:
                    type: boolean
                  optinChildrenNews:
                    type: boolean
        '400':
          description: Bad Request
          content:
            text/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        msg:
                          type: string
                          examples:
                            - Identifier in URL must be an Uuid
                        param:
                          type: string
                          examples:
                            - uuid
                        location:
                          type: string
                          examples:
                            - params
                        value:
                          type: string
                          examples:
                            - d037420a-7097-4e80-b877-e5cc2e41eber
        '404':
          description: Not found
          content:
            text/json:
              examples:
                Customer Not Found:
                  value:
                    errors:
                      msg:
                        Customer not found
  /prospect:
    post:
      tags:
        - Prospects
      summary: Crée un prospect dans la base clients
      description: Crée un prospect dans la base clients avec ses informations clients, son adresse et ses enfants.
      requestBody:
        content:
          text/json:
            schema:
              $ref: '#/components/schemas/PostProspect'
            examples:
              Prospect:
                value:
                  gender: "male"
                  firstname: John
                  lastname: Doe
                  birthday: "1980-01-01"
                  optinEmail: true
                  email: john.doe@mail.com
                  source: myEnterprise
                  numberOfSons: 1
                  numberOfDaughters: 2
                  lastchild:
                    gender: female
                    birthdate: "2000-01-01"
                  billingAddress:
                    city: Aubière
                    countryCode: FR
      responses:
        '204':
          description: No content
        '400':
          description: Prospect already exists
          content:
            text/json:
              examples:
                Prospect already exists:
                  value:
                    errors:
                      - msg: Prospect already exists
  /gift-cards:
    post:
      tags:
        - Gift-Cards
      summary: Création d'une carte cadeau
      description: Créer une carte cadeau du montant "amount" donné dans le body. Retourne le numéro de carte et son code PIN. Amount doit être un entier. Appel sécurisé par apikey.
      requestBody:
        content:
          text/json:
            schema:
              $ref: '#/components/schemas/PostGiftCard'
      responses:
        '200':
          description: OK
          content:
            text/json:
              examples:
                Return ok:
                  value:
                    giftCardNumber: "0910000001313"
                    pin: "0211"
        '400':
          description: Error occurred
          content:
            text/json:
              examples:
                Invalid amount:
                  value:
                    errors:
                      - msg: "Invalid amount"
                Error occurred:
                  value:
                    errors:
                      - msg:
                          Error occurred on CashGift WS
  /gift-cards/{cardNumber}={PIN}:
    get:
      tags:
        - Gift-Cards
      summary: Informations d'une carte cadeau
      description: Retourne les informations d'une carte cadeau authentifié par apikey
      parameters:
        - name: cardNumber
          in: path
          description: numéro de la carte cadeau à modifier
          required: true
          schema:
            type: integer
        - name: PIN
          in: path
          description: code PIN de la carte à modifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            text/json:
              examples:
                Active:
                  value:
                      balance: 50.03
                      expirationDate: "2024-12-31"
                      status: "active"
                Expired:
                  value:
                      balance: 10
                      expirationDate: "2024-01-31"
                      status: "expired"
                Depleted:
                  value:
                      balance: 0
                      expirationDate: "2024-12-31"
                      status: "depleted"
                Inactive:
                  value:
                      balance: 150.55
                      expirationDate: "2025-12-31"
                      status: "inactive"
        '404':
          description: Not found
          content:
            text/json:
              examples:
                Gift card not found:
                  value:
                    errors:
                      msg:
                        Gift card not found
        '400':
          description: Error occurred
          content:
            text/json:
              examples:
                Error occurred:
                  value:
                    errors:
                      msg:
                        Error occurred on CashGift WS
  /gift-cards/{cardNumber}={PIN}/balance:
    patch:
      tags:
        - Gift-Cards
      summary: Modifie les points d'une carte cadeau
      description: Modifie les points d'une carte cadeau. Amount doit être un nombre flottant. Authentifié par apikey.
      parameters:
        - name: cardNumber
          in: path
          description: numéro de la carte cadeau à modifier
          required: true
          schema:
            type: integer
        - name: PIN
          in: path
          description: code PIN de la carte à modifier
          required: true
          schema:
            type: integer
      requestBody:
          content:
            text/json:
              examples:
                Positive Amount:
                  value:
                    amount: 25.52
                Negative Amount:
                  value:
                    amount: 42.24
      responses:
        '204':
          description: No Content
        '404':
          description: Not found
          content:
            text/json:
              examples:
                Gift card not found:
                  value:
                    errors:
                      - msg: Gift card not found
                        code: "CARD_NOT_FOUND"
        '400':
          description: Error occurred
          content:
            text/json:
              examples:
                Card number must be of thirteen digits:
                  value:
                    errors:
                      - msg: Card number must be of thirteen digits
                        code: INVALID_CARD_FORMAT
                Pin must be of four digits:
                  value:
                    errors:
                      - msg: Pin must be of four digits
                        code: INVALID_PIN_FORMAT
                Amount is mandatory:
                  value:
                    errors:
                      - msg: Amount is mandatory
                        code: MISSING_AMOUNT
                Amount has too many decimals:
                  value:
                    errors:
                      - msg: Amount can have at most two decimals
                        code: TOO_MANY_DECIMALS
                Blocked card:
                  value:
                    errors:
                      - msg: Blocked card
                        code: BLOCKED_CARD
                Empty card:
                  value:
                    errors:
                      - msg: Empty card
                        code: EMPTY_CARD
                Expired card:
                  value:
                    errors:
                      - msg: Expired card
                        code: EXPIRED
                Invalid amount:
                  value:
                    errors:
                      - msg: Invalid amount
                        code: INVALID_AMOUNT
                Inactive card:
                  value:
                    errors:
                      - msg: Inactive card
                        code: INACTIVE
                Incorrect PIN:
                  value:
                    errors:
                      - msg: Incorrect PIN
                        code: INCORRECT_PIN
                Insufficient balance:
                  value:
                    errors:
                      - msg: Insufficient balance
                        code: INSUFFICIENT_BALANCE
                Error occurred:
                  value:
                    errors:
                      - msg: Error occurred on CashGift WS
                        code: ERROR
  /me:
    get:
      tags:
        - Me
      summary: Informations d'un client
      description: Retourne les informations d'un client authentifié par keycloak
      responses:
        '200':
          description: OK
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/Me'
    patch:
      tags:
        - Me
      summary: Modifications d'un client
      description: Modifie les informations d'un client authentifié par keycloak
      requestBody:
          content:
            text/json: 
              schema:
                $ref: '#/components/schemas/PatchMe'
              examples:
                Example:
                  value:
                    gender: male
                    firstname: John
                    lastname: Doe
                    birthday: "2000-01-01"
                    phoneNumber: "+33600000000"
                    optinEmail: true
                    optinPhone: false
                    billingAddress:
                      address1: "1 AVENUE DES FRERES MONTGOLFIER"
                      address2: null
                      city: "Aubiere"
                      postalCode: "63170"
                      countryCode: "FR"
                    optinFidelity: true
                    optinWomenNews: true
                    optinGoodDeals: true
                    optinWebExclusives: true
                    optinStoreNews: true
                    optinMenNews: true
                    optinBfcNews: true
                    optinChildrenNews: true
      responses:
        '200':
          description: Ok
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/PatchMe200'
        '404':
          description: Not found
          content:
            text/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      msg: 
                        type: string
                        examples: 
                          - "The customer does not exist"
    delete:
      tags:
        - Me
      summary: Suppression d'un client
      description: Supprime le client authentifié par keycloak
      responses:
        '204':
          description: No Content
        '404':
          description: Not found
          content:
            text/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        msg:
                          type: string
                          examples:
                            - The customer does not exist
  /me/activate:
    get:
      tags:
        - Me activate
      summary: Active son compte client
      description: >-
        Active son compte client authentifié par keycloak. 
      responses:
        '204':
          description: No content
  /me/affected-store:
    get:
      tags:
        - Me affected store
      summary: Informations du magasin affecté à un client
      description: >-
        Retourne les informations du magasin affecté à un client authentifié par
        keycloak. Si le magasin d'affectation est le web, null est retourné.
      responses:
        '200':
          description: OK
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/AffectedStore'
    post:
      tags:
        - Me affected store
      summary: Affecte le magasin d'affectation au client 
      description: >-
       Affecte le magasin d'affectation au client authentifié par keycloak
      requestBody:
        content:
          text/json:
            schema:
              type: object
              properties: 
                id:
                  type: string
                  examples:
                    - "001"
      responses: 
        '200':
          description: OK
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/AffectedStore'
  /me/dematerialization:
    post:
      tags:
        - Me dematerialization
      summary: Affecte le choix de l'optin dematerialisation du client
      description: >-
        Affecte le choix de l'optin dematerialisation du client yes / no /
        not_pronounced
      requestBody:
        content:
          text/json:
            schema:
              $ref: '#/components/schemas/OptinDematBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/OptinDematResponse'
        '400':
          description: Bad Request
          content:
            text/json:
              examples:
                Empty body:
                  value:
                    errors:
                      - msg: Choice is mandatory
                        param: choice
                        location: body
                      - msg: Choice must be in 'yes', 'no', 'not_pronounced'
                        param: choice
                        location: body
                Wrong value:
                  value:
                    msg: Choice must be in 'yes', 'no', 'not_pronounced'
                    param: choice
                    location: body
                    value: tyes
        '404':
          description: Not found
          content:
            text/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        msg:
                          type: string
                          examples:
                            - The customer does not exist
  /me/family:
    get:
      tags:
        - Me family
      summary: Liste des membres de la famille d'un client
      description: Retourne les membres de la famille d'un client authentifié par keycloak
      responses:
        '200':
          description: OK
          content:
            text/json:
              examples:
                Response:
                  value:
                    - id: "1"
                      relationshipType: "daughter"
                      birthdate: "1990-05-15"
                      firstname: "Alice"
                    - id: "2"
                      relationshipType: "son"
                      birthdate: "1991-06-02"
                      firstname: "Michel"
                    - id: "3"
                      relationshipType: "husband"
                      birthdate: "1985-02-20"
                      firstname: "John"
                    - id: "4"
                      relationshipType: "wife"
                      birthdate: "1988-11-10"
                      firstname: "Emma"
        '204':
          description: No content
        '404':
          description: Not found
          content:
            text/json:
              examples:
                Customer Not Found:
                  value:
                    errors:
                      msg:
                        The customer does not exist
  /v1/me/offers:
    get:
      tags:
        - Me offers v1
      summary: Liste des offres d'un client
      description: Retourne les offres associées à un client authentifié par keycloak
      parameters:
        - name: language
          in: query
          description: Langue des offres
          required: false
          schema:
            type: string
            default: fr
      responses:
        '200':
          description: OK
          content:
            text/json:
              examples:
                Response:
                  value:
                    - id: 1
                      type: "event"
                      name: "AVANTAGE_ANNIVERSAIRE"
                      image:
                        light: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/offers/offre%20anniversaire%20blanc.png"
                        dark: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/offers/offre%20anniversaire%20noir.png"
                      description: "TODO"
                      isActive: true
                      expirationDate: "11/12/2023"
                    - id: 2
                      type: "activable"
                      name: "AVANTAGE_BIENVENUE"
                      image: 
                          light: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/offers/offre%20bienvenue%20blanc.png"
                          dark: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/offers/offre%20bienvenue%20noir.png"
                      description: "TODO"
                      isActive: false
                    - id: 5
                      type: "points"
                      name: "AVANTAGE-15%_250POINTS"
                      image: 
                          light: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/offers/offre%20250%20coeurs%20blanc.png"
                          dark: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/offers/offre%20250%20coeurs%20noir.png"
                      description: "TODO"
                      isActive: true
                      expirationDate: "23/01/2024"
                    - id: 6
                      type: "points"
                      name: "AVANTAGE-20%_400POINTS"
                      image: 
                          light: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/offers/offre%20400%20coeurs%20blanc.png"
                          dark: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/offers/offre%20400%20coeurs%20noir.png"
                      description: "TODO"
                      isActive: false
                      missingPoints: 145
  /v2/me/offers:
    get:
      tags:
        - Me offers v2
      summary: Liste des offres d'un client (v1 + sponsorships)
      description: Retourne les offres associées à un client authentifié par keycloak
      parameters:
        - name: language
          in: query
          description: Langue des offres
          required: false
          schema:
            type: string
            default: fr
      responses:
        '200':
          description: OK
          content:
            text/json:
              examples:
                Response:
                  value:
                    - id: 1
                      type: "event"
                      name: "AVANTAGE_ANNIVERSAIRE"
                      image:
                        light: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/offers/offre%20anniversaire%20blanc.png"
                        dark: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/offers/offre%20anniversaire%20noir.png"
                      description: "TODO"
                      isActive: true
                      expirationDate: "11/12/2023"
                    - id: 2
                      type: "activable"
                      name: "AVANTAGE_BIENVENUE"
                      image: 
                          light: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/offers/offre%20bienvenue%20blanc.png"
                          dark: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/offers/offre%20bienvenue%20noir.png"
                      description: "TODO"
                      isActive: false
                    - id: 5
                      type: "points"
                      name: "AVANTAGE-15%_250POINTS"
                      image: 
                          light: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/offers/offre%20250%20coeurs%20blanc.png"
                          dark: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/offers/offre%20250%20coeurs%20noir.png"
                      description: "TODO"
                      isActive: true
                      expirationDate: "23/01/2024"
                    - id: 6
                      type: "points"
                      name: "AVANTAGE-20%_400POINTS"
                      image: 
                          light: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/offers/offre%20400%20coeurs%20blanc.png"
                          dark: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/offers/offre%20400%20coeurs%20noir.png"
                      description: "TODO"
                      isActive: false
                      missingPoints: 145
                    - id: "223457"
                      barcode: "223457"
                      type: "barcode"
                      expirationDate: "29/04/2024"
                      isActive: true
                      name: "COUPON_PARRAIN"
                      description: "DESC PARRAIN OFFER FR"
                      image: 
                        light: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/offers/Offres_Parrainage_Blanc_FR.png"
                        dark: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/offers/Offres_Parrainage_Noir_FR.png"
  /me/offers/{id}/activate:
    post:
      tags:
        - Me offers
      summary: Active l'offre d'un client
      description: >-
        Active l'offre d'un client authentifié par keycloak. L'offre est
        disponible immédiatement en caisse
      parameters:
        - name: id
          in: path
          description: id de l'offre à activer pour le client
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/ActivateOfferResponse'
        '400':
          description: Bad Request
          content:
            text/json:
              examples:
                Not Activable:
                  value:
                    errors:
                      msg:
                        This offer is not activable
                Already Used or Activated:
                  value:
                    errors:
                      msg:
                        Offer already used or activated
        '404':
          description: Not found
          content:
            text/json:
              examples:
                Customer Not Found:
                  value:
                    errors:
                      msg:
                        The customer does not exist
                Offer Not Found:
                  value:
                    errors:
                      msg:
                        The offer does not exist
  /me/points-history:
    get:
      tags:
        - Me
      summary: Historique des points d'un client
      description: Retourne l'histrique des points d'un client authentifié par keycloak
      parameters:
        - name: language
          in: query
          description: Langue des categories de mouvements de point
          required: false
          schema:
            type: string
            default: fr
      responses:
        '200':
          description: OK
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/PointsHistory'
  /me/shoes-addict:
    get:
      tags:
      - Me shoes addict
      summary: Rechercher les avantages shoes addict
      description: Retourne les avantages shoes addict d'un client authentifié par keycloak
      parameters:
        - name: language
          in: query
          description: Langue des informations du partenaire
          required: false
          schema:
            type: string
            default: en
      responses:
        '200':
          description: OK
          content:
            text/json:
              examples:
                Is Shoes Addict:
                  value:
                    sinceDate: "2023-02-19"
                    benefitText: "-10% sur tous les produits d'entretien"
                    benefitCode: "AVANTAGE_VIP"
                    phoneNumber: "01 76 21 81 31"
                    partners:
                      - id: "nextory"
                        logoLight: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/partners/partenaire_nextory_w.png"
                        logoDark: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/partners/partenaire_nextory_w.png"
                        image: https://nextory.jpg
                      - id: "homair"
                        logoLight: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/partners/partenaire_homair_w.png"
                        logoDark: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/partners/partenaire_homair_w.png"
                        image: https://homair.jpg
                      - id: "pixum"
                        logoLight: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/partners/partenaire_pixum_w.png"
                        logoDark: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/partners/partenaire_pixum_w.png"
                        image: https://pixum.jpg
                      - id: "wonderbox"
                        logoLight: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/partners/partenaire_wonderbox_w.png"
                        logoDark: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/partners/partenaire_wonderbox_w.png"
                        image: https://wonderbox.jpg
                Is Not Shoes Addict:
                  value:
                    benefitText: "-10% sur tous les produits d'entretien"
                    partners:
                      - id: "nextory"
                        logoLight: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/partners/partenaire_nextory_w.png"
                        logoDark: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/partners/partenaire_nextory_w.png"
                      - id: "homair"
                        logoLight: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/partners/partenaire_homair_w.png"
                        logoDark: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/partners/partenaire_homair_w.png"
                      - id: "pixum"
                        logoLight: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/partners/partenaire_pixum_w.png"
                        logoDark: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/partners/partenaire_pixum_w.png"
                      - id: "wonderbox"
                        logoLight: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/partners/partenaire_wonderbox_w.png"
                        logoDark: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/partners/partenaire_wonderbox_w.png"
        '404':
          description: Not found
          content:
            text/json:
              examples:
                Customer Not Found:
                  value:
                    errors:
                      msg:
                        The customer does not exist
  /me/shoes-addict/partner/{id}:
    get:
      tags:
      - Me shoes addict
      summary: Rechercher un partenaire
      description: Retourne l'histrique des points d'un client authentifié par keycloak
      parameters:
        - name: id
          in: path
          description: id de l'offre à activer pour le client
          required: true
          schema:
            type: string
        - name: language
          in: query
          description: Langue des informations du partenaire
          required: false
          schema:
            type: string
            default: en
      responses:
        '200':
          description: OK
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/PartnerResponse'
        '404':
          description: Not found
          content:
            text/json:
              examples:
                Customer Not Found:
                  value:
                    errors:
                      msg:
                        The customer does not exist
        '403':
          description: Not choose addict
          content:
            text/json:
              examples:
                Not choose addict:
                  value:
                    errors:
                      msg:
                        The customer is not shoes addict
  /news:
    get:
      tags:
        - News
      summary: Liste des actualités
      parameters:
        - name: language
          in: query
          description: Langue des actualitées
          required: false
          schema:
            type: string
            default: fr
      description: >-
        Retourne la liste des actualités Besson pour un utilisateur authentifié
        par keycloak
      responses:
        '200':
          description: OK
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/News'
        '404':
          description: Not found
          content:
            text/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      msg:
                        type: string
                        examples:
                          - No news found
  /newsletter:
    post:
      tags:
        - Newsletter
      summary: Permet d'optin aux emails et déclencher une offre si le client/prospect est    éligible
      requestBody:
        content:
          text/json:
            schema:
              properties:
                language:
                  type: string
                  examples:
                    - fr
                email:
                  type: string
                  examples:
                    - john.die@email.com
                gender:
                  type: string
                  examples:
                    - female
      responses:
        '200':
          description: OK
          content:
            text/json:
              examples:
                Jamais eu de coupon:
                  value:
                    code: COUPON_SENT_AND_OPTIN
                Déjà eu coupon mais pas optin:
                  value:
                    code: COUPON_NOT_SENT_BUT_OPTIN
        '400':
          description: Bad Request
          content:
            text/json:
              examples:
                INVALID_EMAIL_FORMAT:
                  value:
                    errors:
                      msg:
                        Invalid email format
                      code:
                        INVALID_EMAIL_FORMAT
                ALREADY_OPTIN:
                  value:
                    errors:
                      msg:
                        The godchild is already a client
                      code:
                        ALREADY_OPTIN
                DISPOSABLE_EMAIL_NOT_ALLOWED:
                  value:
                    errors:
                      msg:
                        Disposable emails are not allowed
                      code:
                        INVALID_EMAIL_FORMAT
  /onboarding:
    get:
      tags:
        - Onboarding
      summary: Onboarding d'un utilisateur dans l'application fidélité
      description: >
        Retourne l'étape d'onboarding de l'utilisaur dans l'application
        fidélité. 

          Les étapes possibles : 

          * **SIGN_UP_FORM** (nouveau client)
          * **PROFILE_COMPLETION_FORM** (client existant mais avec des infos manquantes)
          * **CONSENTS** (acceptation des conditions pour les nouveaux clients)
          * **STORE_SELECTION** (sélection de son magasin favoris)
          * **DONE** (le client a déjà fait l'onboarding)
      responses:
        '200':
          description: OK
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/Onboarding'
        '401':
          description: Unauthorized
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Unauthorized'
  /onboarding/sign-up:
    post:
      tags:
        - Onboarding
      summary: Valide l'étape SIGN_UP_FORM de l'utilisateur
      description: |
        Retourne l'étape d'onboarding **CONSENTS**
      requestBody:
        content:
          text/json:
            schema:
              $ref: '#/components/schemas/SignUp'
        required: true
      responses:
        '200':
          description: OK
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/Consents'
        '401':
          description: Unauthorized
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '422':
          description: Unprocessable Entity
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/UnprocessableOnboarding'
  /onboarding/complete-profile:
    post:
      tags:
        - Onboarding
      summary: Valide l'étape PROFILE_COMPLETION_FORM de l'utilisateur
      description: |
        Retourne l'étape d'onboarding **STORE_SELECTION**
      requestBody:
        content:
          text/json:
            schema:
              $ref: '#/components/schemas/SignUp'
        required: true
      responses:
        '200':
          description: OK
          content:
            text/json:
              examples:
                Pas de magasins affectation:
                  value:
                    step: STORE_SELECTION
                    data: 
                      isWeb: false
                      store: null
                Magasin affectation non web:
                  value:
                    step: STORE_SELECTION
                    data:
                      isWeb: false
                      store:
                        id: '001'
                        name: Besson Chaussures CLERMONT AUBIERE
                        address:
                          - 1 rue des Frères Montgolfier null
                          - 63170 AUBIERE
                Magasin affectation web:
                  value:
                    step: STORE_SELECTION
                    date:
                      isWeb: true
                      store: null
        '401':
          description: Unauthorized
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '422':
          description: Unprocessable Entity
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/UnprocessableOnboarding'
  /onboarding/consents:
    post:
      tags:
        - Onboarding
      summary: Valide l'étape CONSENTS de l'utilisateur
      description: |
        Retourne l'étape d'onboarding **STORE_SELECTION**
      requestBody:
        content:
          text/json:
            schema:
              $ref: '#/components/schemas/TermOfUse'
        required: true
      responses:
        '200':
          description: OK
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/StoreSelectionConsents'
        '401':
          description: Unauthorized
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '422':
          description: Unprocessable Entity
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/UnprocessableOnboarding'
  /onboarding/store-selection:
    post:
      tags:
        - Onboarding
      summary: Valide l'étape STORE_SELECTION de l'utilisateur
      description: |
        Retourne l'étape d'onboarding **DONE**
      requestBody:
        content:
          text/json:
            schema:
              $ref: '#/components/schemas/IdString'
        required: true
      responses:
        '200':
          description: OK
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/Done'
        '401':
          description: Unauthorized
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '422':
          description: Unprocessable Entity
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/UnprocessableOnboarding'
  /sponsorships:
    get:
      tags:
      - Sponsorships
      summary: Rechercher des parrainages
      description: Retourne les parrainages d'un client authentifié par keycloak
      parameters:
        - name: language
          in: query
          description: Langue des informations du client
          required: false
          schema:
            type: string
            default: en
      responses:
        '200':
          description: OK
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/GetSponsorshipsResponse'
        '404':
          description: Not found
          content:
            text/json:
              examples:
                Customer Not Found:
                  value:
                    errors:
                      msg:
                        The customer does not exist
    post:
      tags:
      - Sponsorships
      summary: Demande de parrainage
      description: Permet de faire une demande de parrainage depuis une interface web ou depuis l'application web.
      requestBody:
        content:
          text/json:
            schema:
              properties:
                godchildEmail:
                  type: string
                  examples:
                    - godchild@email.com
      responses:
        '204':
          description: No content
        '404':
          description: Not found
          content:
            text/json:
              examples:
                Customer Not Found:
                  value:
                    errors:
                      msg:
                        The customer does not exist
                      code: 
                        "SPONSOR_NOT_FOUND"
        '400':
          description: Bad Request
          content:
            text/json:
              examples:
                INVALID_EMAIL_FORMAT:
                  value:
                    errors:
                      msg:
                        Invalid format for godchild's email
                      code:
                        INVALID_EMAIL_FORMAT
                GODCHILD_ALREADY_CLIENT:
                  value:
                    errors:
                      msg:
                        The godchild is already a client
                      code:
                        GODCHILD_ALREADY_CLIENT
                DISPOSABLE_EMAIL_NOT_ALLOWED:
                  value:
                    errors:
                      msg:
                        Disposable emails are not allowed
                      code:
                        DISPOSABLE_EMAIL_NOT_ALLOWED
  /stores:
    get:
      tags:
        - Stores
      summary: Liste de tous les magasins
      parameters:
        - name: lat
          in: query
          description: >-
            Latitude de la position dont on veut connaître la distance aux
            magasins
          required: false
          schema:
            type: string
        - name: lng
          in: query
          description: >-
            Longitude de la position dont on veut connaître la distance aux
            magasins
          required: false
          schema:
            type: string
      description: >-
        Retourne la liste des magasins Besson pour un utilisateur authentifié
        par keycloak. Si lat et lng sont renseignés, l'api retourne les 5 magasins les plus proches,
        du plus proche ou plus lointain
      responses:
        '200':
          description: OK
          content:
            text/json: 
              examples:
                Paramètres vides:
                  value:
                  - id: 011'
                    name: BESSON CHAUSSURES COURNON
                    address:
                      - z.i - 67 avenue d aubiere (à coté de b&m)
                      - 63800 COURNON D AUVERGNE
                    coordinates:
                      lat: '45.7423'
                      lng: '3.16893'
                    timezoneOffset: '+02:00'
                    hours:
                            - - - '09:00'
                                - '19:00'
                            - - - '09:30'
                                - '19:00'
                            - - - '10:00'
                                - '12:00'
                              - - '14:00'
                                - '19:00'
                Coordonnées renseignées:
                  value:
                  - id: 011'
                    name: BESSON CHAUSSURES COURNON
                    address:
                      - Z.I - 67 AVENUE D AUBIERE (à coté de B&M)
                      - 63800 COURNON D AUVERGNE
                    coordinates:
                      lat: '45.7423'
                      lng: '3.16893'
                    timezoneOffset: '+02:00'
                    hours:
                            - - - '09:00'
                                - '19:00'
                            - - - '09:30'
                                - '19:00'
                            - - - '10:00'
                                - '12:00'
                              - - '14:00'
                                - '19:00'
                    distance: "85 km"
components:
  schemas:
    PostCustomerSubscriptions:
      type: object
      properties:
        optinEmail:
          type: boolean
        optinPhone:
          type: boolean
        optinFidelity:
          type: boolean
        optinWomenNews:
          type: boolean
        optinGoodDeals:
          type: boolean
        optinWebExclusives:
          type: boolean
        optinStoreNews:
          type: boolean
        optinMenNews:
          type: boolean
        optinBfcNews:
          type: boolean
        optinChildrenNews:
          type: boolean
    PostProspect:
      type: object
      properties:
        gender:
          type: string
          enum:
            - male
            - female
            - other
        firstname:
          type: string
        lastname:
          type: string
        birthday:
          type: string
        optinEmail:
          type: boolean
        email:
          type: string
        source:
          type: string
        numberOfSons:
          type: integer
        numberOfDaughters:
          type: integer
        lastchild:
          type: object
          properties:
            gender:
              type: string
              enum:
                - male
                - female
            birthdate:
              type: string
        billingAddress:
          type: object
          properties:
            city:
              type: string
            contrycode:
              type: string
    PostGiftCard:
      type: object
      properties:
        amount:
          type: integer
          examples: 
            - 100
    PatchGiftCard:
      type: object
      properties:
        amount:
          type: number
          examples: 
            - 100.23
            - 101.23
    CustomerCreate:
      type: object
      required:
        - email
      properties:
        keycloakId:
          type: string
        cardNumber:
          type: string
        storeId:
          type: string
        gender:
          type: string
          enum:
            - male
            - female
        firstname:
          type: string
        lastname:
          type: string
        birthday:
          type: string
        phoneNumber:
          type: string
        optinEmail:
          type: boolean
        optinPhone:
          type: boolean
        optinDematerialization:
          type: string
          enum:
            - yes
            - no
            - not_pronounced
        email:
          type: string
        source:
          type: string
        activationDate:
          type: string
        activate:
          type: boolean
        billingAddress:
          type: object
          properties:
            address1:
              type: string
            address2:
              type: string
            city:
              type: string
            postalCode:
              type: string
            countryCode:
              type: string
        deliceryAddress:
          type: object
          properties:
            address1:
              type: string
            address2:
              type: string
            city:
              type: string
            postalCode:
              type: string
            countryCode:
              type: string
    CustomerPatch:
      type: object
      properties:
        keycloakId:
          type: string
        countryCodeVerification:
          type: string
          enum:
            - FR
        gender:
          type: string
          enum:
            - male
            - female
        firstname:
          type: string
          examples:
            - John
        lastname:
          type: string
          examples:
            - Doe
        birthday:
          type: string
          examples:
            - '2000-01-01'
        phoneNumber:
          type: string
          examples:
            - '+33600000000'
        optinEmail:
          type: boolean
          examples:
            - true
        optinPhone:
          type: boolean
          examples:
            - true
        optinDematerialization:
          type: string
          enum:
            - yes
            - no
            - not_pronounced
        email:
          type: string
          examples:
            - john.doe@mail.com
        source:
          type: string
          examples:
            - myEnterprise
        activationDate: 
          type: string 
          examples:
            - 2024-07-17
        billingAddress:
          type: object
          properties:
            address1:
              type: string
              examples:
                - 1 avenue des frères montgolfier
            address2:
              type: string
              examples:
                - null
            city:
              type: string
              examples: 
                - Aubière
            postalCode:
              type: string
              examples: 
                - 63170
            countryCode:
              type: string
              examples:
                - FR
        
    BasketsCalculate:
      type: object
      properties:
        customerCardNumber:
          type: string
          examples: 9980003977435
        storeId:
          type: string
          examples: 195
        language:
          type: string
          examples: FR
        articles:
          type: object
          properties:
            sku:
              type: string
              examples:
                - "999201969999"
            quantity:
              type: integer
              examples:
                - 1
            price:
              type: integer
              examples:
                - 11.99
        coupons:
          type: object
          properties:
            examples:
                - AVANTAGE_BIENVENUE
    CustomerResponse201:
      type: object
      properties:
        id:
          type: string
          examples:
            - 15477
        cardNumber:
          type: string
          examples:
            - 9980007395396
        storeId:
          type: string
          examples:
            - '195'
        gender:
          type: string
          examples:
            - male
        firstname:
          type: string
          examples:
            - John
        lastname:
          type: string
          examples:
            - Doe
        birthday:
          type: string
          examples:
            - '2000-01-01'
        phoneNumber:
          type: string
          examples:
            - '+33600000000'
        optinEmail:
          type: boolean
          examples:
            - true
        optinPhone:
          type: boolean
          examples:
            - false
        optinDematerialization:
          type: string
          enum:
            - yes
            - no
            - not_pronounced
        source:
          type: string
          examples: 
            - myCompany
        email:
          type: string
          examples:
            - john.doe@mail.com
        billingAddress:
          type: object
          properties:
            id:
              type: string
              examples:
                - "3828813"
            address1:
              type: string
              examples:
                - 1 avenue des frères montgolfier
            address2:
              type: string
              examples:
                - null
            city:
              type: string
              examples: 
                - Aubière
            postalCode:
              type: string
              examples: 
                - 63170
            countryCode:
              type: string
              examples:
                - FR
        deliveryAddress:
          type: object
          properties:
            id:
              type: string
              examples:
                - "3828813"
            address1:
              type: string
              examples:
                - 1 avenue des frères montgolfier
            address2:
              type: string
              examples:
                - null
            city:
              type: string
              examples: 
                - Aubière
            postalCode:
              type: string
              examples: 
                - 63170
            countryCode:
              type: string
              examples:
                - FR
    CustomerModifyPoints:
      type: object
      properties:
        points:
          type: string
          examples:
            - 10
        reason:
          type: string
          examples:
            - manual
    CustomerAddressPut:
      type: object
      properties:
        address1:
          type: string
          examples:
            - 27 chemin de la chabanette
        address2:
          type: string
          examples:
            - lieu-dit 'la Côte'
        postalCode:
          type: string
          examples:
            - 63230
        city:
          type: string
          examples:
            - AURIERES
        countryCode:
          type: string
          examples:
            - FR
        source:
          type: string
          examples:
            - myCompany
    CustomerAddressPost:
      type: object
      properties:
        type:
          type: string
          examples:
            - delivery
        address1:
          type: string
          examples:
            - 27 chemin de la chabanette
        address2:
          type: string
          examples:
            - lieu-dit 'la Côte'
        postalCode:
          type: string
          examples:
            - 63230
        city:
          type: string
          examples:
            - AURIERES
        countryCode:
          type: string
          examples:
            - FR
        source:
          type: string
          examples:
            - myCompany
        default:
          type: boolean
          examples:
            - true
    Me:
      type: object
      properties:
        firstname:
          type: string
          examples:
            - John
        lastname:
          type: string
          examples:
            - DOE
        loyalSince:
          type: string
          format: date
          examples:
            - '2000-01-01'
        birthday:
          type: string
          format: date
          examples:
            - '2000-01-01'
        phoneNumber:
          type: string
          examples:
            - '+33600000000'
        optinEmail:
          type: boolean
          examples:
            - true
        optinPhone:
          type: boolean
          examples:
            - true
        email:
          type: string
          format: email
          examples:
            - john.doe@mail.com
        points:
          type: integer
          format: int64
          examples:
            - 100
        cardNumber:
          type: string
          examples:
            - '9980003968037'
        status:
          type: object
          properties:
            value:
              type: string
              enum:
                - lover
                - addict
            endDate:
              type: string
              format: date
              description: uniquement présent quand le client est lover
              examples:
                - '2000-01-01'
        offersCount:
          type: integer
          format: int64
          examples:
            - 4
        billingAddress:
          type: object
          properties:
            address1:
              type: string
              examples:
                - 1 AVENUE DES FRERES MONTGOLFIER
            address2:
              type: string
              examples:
                - null
            city:
              type: string
              examples:
                - AUBIERE
            postalCode:
              type: string
              examples:
                - '63170'
            countryCode:
              type: string
              examples:
                - FR
        optinDematerialization:
          type: string
          enum:
            - yes
            - no
            - not_pronounced
        optinFidelity:
          type: boolean
        optinWomenNews:
          type: boolean
        optinGoodDeals:
          type: boolean
        optinWebExclusives:
          type: boolean
        optinStoreNews:
          type: boolean
        optinMenNews:
          type: boolean
        optinBfcNews:
          type: boolean
        optinChildrenNews:
          type: boolean
    PatchMe:
      type: object
      properties:
        gender:
          type: string
          enum:
            - male
            - female
            - other
        firstname:
          type: string
          examples:
            - John
        lastname:
          type: string
          examples:
            - DOE
        birthday:
          type: string
          format: date
          examples:
            - '2000-01-01'
        phoneNumber:
          type: string
          examples:
            - '+33600000000'
        optinEmail:
          type: boolean
          examples:
            - true
        optinPhone:
          type: boolean
          examples:
            - false
        billingAddress:
          type: object
          properties:
            address1:
              type: string
              examples:
                - 1 AVENUE DES FRERES MONTGOLFIER
            address2:
              type: string
              examples:
                - null
            city:
              type: string
              examples:
                - AUBIERE
            postalCode:
              type: string
              examples:
                - '63170'
            countryCode:
              type: string
              examples:
                - FR
        optinFidelity:
          type: boolean
        optinWomenNews:
          type: boolean
        optinGoodDeals:
          type: boolean
        optinWebExclusives:
          type: boolean
        optinStoreNews:
          type: boolean
        optinMenNews:
          type: boolean
        optinBfcNews:
          type: boolean
        optinChildrenNews:
          type: boolean
    PatchMe200:
      type: object
      properties:
        gender:
          type: string
          enum:
            - male
            - female
            - other
        firstname:
          type: string
          examples:
            - John
        lastname:
          type: string
          examples:
            - DOE
        loyalSince:
          type: string
          format: date
          examples:
            - '2000-01-01'
        birthday:
          type: string
          format: date
          examples:
            - '2000-01-01'
        phoneNumber:
          type: string
          examples:
            - '+33600000000'
        optinEmail:
          type: boolean
          examples:
            - true
        optinPhone:
          type: boolean
          examples:
            - false
        status:
          type: object
          properties:
            value:
              type: string
              enum:
                - lover
                - addict
            endDate:
              type: string
              format: date
              description: uniquement présent quand le client est lover
              examples:
                - '2000-01-01'
        offersCount:
          type: integer
          format: int64
          examples:
            - 4
        billingAddress:
          type: object
          properties:
            address1:
              type: string
              examples:
                - 1 AVENUE DES FRERES MONTGOLFIER
            address2:
              type: string
              examples:
                - null
            city:
              type: string
              examples:
                - AUBIERE
            postalCode:
              type: string
              examples:
                - '63170'
            countryCode:
              type: string
              examples:
                - FR
        optinFidelity:
          type: boolean
        optinWomenNews:
          type: boolean
        optinGoodDeals:
          type: boolean
        optinWebExclusives:
          type: boolean
        optinStoreNews:
          type: boolean
        optinMenNews:
          type: boolean
        optinBfcNews:
          type: boolean
        optinChildrenNews:
          type: boolean
    AffectedStore:
      type: object
      properties:
        id:
          type: string
          examples:
            - '011'
        name:
          type: string
          examples:
            - BESSON CHAUSSURES COURNON
        address:
          type: array
          items:
            type: string
          examples:
            - - Z.I - 67 AVENUE D AUBIERE (à coté de B&M)
              - 63800 COURNON D AUVERGNE
        coordinates:
          type: object
          properties:
            lat:
              type: string
              examples:
                - '45.7423'
            lng:
              type: string
              examples:
                - '3.16893'
        timezoneOffset:
          type: string
          examples:
            - '+02:00'
        hours:
          type: array
          items:
            type: array
            items:
              type: array
              examples:
                - - '09:00'
                  - '12:00'
                - - '14:00'
                  - '19:00'
    Stores:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            examples:
              - '011'
          name:
            type: string
            examples:
              - BESSON CHAUSSURES COURNON
          address:
            type: array
            items:
              type: string
            examples:
              - - z.i - 67 avenue d aubiere (à coté de b&m)
                - 63800 COURNON D AUVERGNE
          coordinates:
            type: object
            properties:
              lat:
                type: string
                examples:
                  - '45.7423'
              lng:
                type: string
                examples:
                  - '3.16893'
          timezoneOffset:
            type: string
            examples:
              - '+02:00'
          hours:
            type: array
            examples:
                - - - '09:00'
                    - '19:00'
                - - - '09:30'
                    - '19:00'
                - - - '10:00'
                    - '12:00'
                  - - '14:00'
                    - '19:00'
          distance:
            type: string
            description: >-
              Uniquement alimenté si les cooronnées sont transmises dans les
              paramètres de l'appel
            examples:
              - 2839 km
    Offers:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            examples:
              - '1'
          type:
            type: string
            enum:
              - points
              - event
              - activable
          missingPoints:
            type: integer
            format: int64
            description: Uniquement alimenté pour le type points
            examples:
              - 25
          name:
            type: string
            examples:
              - 5% - 75 points
          image:
            type: object
            properties:
              light:
                type: string
                examples:
                  - >-
                    https://www.besson-chaussures.com/img/mobile_webapp/vector/logo_site_lang_fr.svg?frz-v=827
              dark:
                type: string
                examples:
                  - >-
                    https://www.besson-chaussures.com/img/mobile_webapp/vector/logo_site_lang_fr.svg?frz-v=827
          description:
            type: string
            examples:
              - Vous avez droit à 5%
          expirationDate:
            type: string
            format: date
            examples:
              - '2030-12-01'
          isActive:
            type: integer
            description: Uniquement pour les offres de type activable
            examples:
              - false
    News:
      type: object
      properties:
        id:
          type: string
          examples:
            - '1'
        name:
          type: string
          examples:
            - Calendrier de l'avent
        main:
          type: object
          properties:
            image:
              type: object
              properties:
                light:
                  type: string
                  examples:
                    - >-
                      https://besson-assets.fra1.cdn.digitaloceanspaces.com/news/d%C3%A9cembre2023/calendrier%20de%20l'avent_home-page.png
                dark:
                  type: string
                  examples:
                    - >-
                      https://besson-assets.fra1.cdn.digitaloceanspaces.com/news/d%C3%A9cembre2023/calendrier%20de%20l'avent_home-page.png
            video:
              type: object
              properties:
                light:
                  type: string
                  examples:
                    - >-
                      https://www.besson-chaussures.com/img/mobile_webapp/vector/logo_site_lang_fr.svg?frz-v=827
                dark:
                  type: string
                  examples:
                    - >-
                      https://www.besson-chaussures.com/img/mobile_webapp/vector/logo_site_lang_fr.svg?frz-v=827
        details:
          type: array
          items:
            type: object
            properties:
              image:
                type: object
                properties:
                  light:
                    type: string
                    examples:
                      - >-
                        https://besson-assets.fra1.cdn.digitaloceanspaces.com/news/d%C3%A9cembre2023/calendrier%20de%20l'avent_page-d%C3%A9di%C3%A9e_.png
                  dark:
                    type: string
                    examples:
                      - >-
                        https://besson-assets.fra1.cdn.digitaloceanspaces.com/news/d%C3%A9cembre2023/calendrier%20de%20l'avent_page-d%C3%A9di%C3%A9e_.png
                  url:
                    type: string
                    examples:
                      - null
    PointsHistory:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            examples:
              - '1'
          date:
            type: string
            format: date
            examples:
              - '2023-09-01'
          amount:
            type: integer
            format: int64
            examples:
              - 10
          categoryLabel:
            type: string
            examples:
              - Achat
          category:
            type: string
            enum:
              - purchase
              - besson-for-change
              - points-expiration
              - manual
              - recycling
              - other
          purchaseReceiptUrl:
            type: string
            descrption: Uniquement pour les mouvement d'achat/retour
            examples:
              - xxxx.pdf
    Consents:
      type: object
      properties:
        step:
          type: string
          examples:
            - CONSENTS
    Onboarding:
      type: object
      properties:
        step:
          type: string
          enum:
            - SIGN_UP_FORM
            - PROFILE_COMPLETION_FORM
            - CONSENTS
            - STORE_SELECTION
            - DONE
        data:
          type: object
          properties:
            gender:
              type: string
              description: Pour PROFILE_COMPLETION_FORM
              enum:
                - male
                - female
            firstname:
              type: string
              description: Pour PROFILE_COMPLETION_FORM
              examples:
                - John
            lastname:
              type: string
              description: Pour PROFILE_COMPLETION_FORM
              examples:
                - Doe
            birthday:
              type: string
              description: Pour PROFILE_COMPLETION_FORM
              examples:
                - '2000-01-01'
            countryCode:
              type: string
              description: Pour PROFILE_COMPLETION_FORM
              examples:
                - FRA
            postalCode:
              type: string
              description: Pour PROFILE_COMPLETION_FORM
              examples:
                - '63170'
            phoneNumber:
              type: string
              description: Pour PROFILE_COMPLETION_FORM
              examples:
                - '+33600000000'
            optinEmail:
              type: boolean
              description: Pour PROFILE_COMPLETION_FORM
              examples:
                - true
            optinPhone:
              type: boolean
              description: Pour PROFILE_COMPLETION_FORM
              examples:
                - false
            store:
              type: object
              properties:
                id:
                  type: string
                  description: Pour STORE_SELECTION
                  examples:
                    - '001'
                name:
                  type: string
                  description: Pour STORE_SELECTION
                  examples:
                    - Besson Chaussures CLERMONT AUBIERE
                address:
                  type: array
                  description: Pour STORE_SELECTION
                  examples:
                    - - 1 rue des Frères Montgolfier null
                      - 63170 AUBIERE
            isWeb:
              type: boolean
              description: Pour STORE_SELECTION
              examples:
                - true
    Unauthorized:
      type: object
      properties:
        head:
          type: object
          properties:
            title:
              examples:
                - 401 Authorization Required
      xml:
        name: html
    SignUp:
      type: object
      properties:
        gender:
          type: string
          description: Pour PROFILE_COMPLETION_FORM
          enum:
            - male
            - female
        firstname:
          type: string
          description: Pour PROFILE_COMPLETION_FORM
          examples:
            - John
        lastname:
          type: string
          description: Pour PROFILE_COMPLETION_FORM
          examples:
            - Doe
        birthday:
          type: string
          description: Pour PROFILE_COMPLETION_FORM
          examples:
            - '2000-01-01'
        countryCode:
          type: string
          description: Pour PROFILE_COMPLETION_FORM
          examples:
            - FR
        postalCode:
          type: string
          description: Pour PROFILE_COMPLETION_FORM
          examples:
            - '63170'
        phoneNumber:
          type: string
          description: Pour PROFILE_COMPLETION_FORM
          examples:
            - '+33600000000'
        optinEmail:
          type: boolean
          description: Pour PROFILE_COMPLETION_FORM
          examples:
            - true
        optinPhone:
          type: boolean
          description: Pour PROFILE_COMPLETION_FORM
          examples:
            - false
    UnprocessableOnboarding:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              msg:
                type: string
                examples:
                  - Wrong endpoint for the in-base onboarding step
    StoreSelection:
      type: object
      properties:
        step:
          type: string
          examples:
            - STORE_SELECTION
        data:
          type: object
          properties:
            isWeb:
              type: string
              examples: 
                - false
            storeId:
              type: string
              examples:
                - null
    StoreSelectionConsents:
      type: object
      properties:
        step:
          type: string
          examples:
            - STORE_SELECTION
        data:
          type: object
          properties:
            isWeb:
              type: string
              examples: 
                - false
            storeId:
              type: string
              examples:
                - null
    IdString:
      type: object
      properties:
        id:
          type: string
          examples:
            - '001'
    Done:
      type: object
      properties:
        step:
          type: string
          examples:
            - DONE
    TermOfUse:
      type: object
      properties:
        termsOfUseConsent:
          type: boolean
          examples:
            - true
    OptinDematBody:
      type: object
      properties:
        choice:
          enum:
            - 'yes'
            - 'no'
            - not_pronounced
    OptinDematResponse:
      type: object
      properties:
        optinDematerialization:
          enum:
            - 'yes'
            - 'no'
            - not_pronounced
    ActivateOfferResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            examples:
              - '2'
          type:
            type: string
            examples:
              - activable
          name:
            type: string
            examples:
              - AVANTAGE_BIENVENUE
          image:
            type: object
            properties:
              light:
                type: string
                examples:
                  - >-
                    https://besson-assets.fra1.cdn.digitaloceanspaces.com/offers/offre%20bienvenue%20blanc.png
              dark:
                type: string
                examples:
                  - >-
                    https://besson-assets.fra1.cdn.digitaloceanspaces.com/offers/offre%20bienvenue%20noir.png
          description:
            type: string
            examples:
              - Vous avez droit à 5€
          expirationDate:
            type: string
            format: date
            examples:
              - '01/12/2025'
          isActive:
            type: integer
            description: Uniquement pour les offres de type activable
            examples:
              - true
    PartnerResponse:
      type: object
      properties:
        id:
          type: string
          examples:
            - 'homair'
        logoLight:
          type: string
          examples:
            - "https://besson-assets.fra1.cdn.digitaloceanspaces.com/partners/partenaire_homair_w.png"
        logoDark:
          type: string
          examples:
            - "https://besson-assets.fra1.cdn.digitaloceanspaces.com/partners/partenaire_homair_w.png"
        headerText:
          type: string
          examples:
            - "<p><strong>Vos vacances telles que vous les r&ecirc;viez avec HOMAIR !</strong></p>"
        bodyHTML:
          type: string
          enum:
            - "<p><span style=\"\"color:#e9454a\"\"><span style=\"\"font-size:16px\"\"><strong>-15% en moyenne et basse saisons</strong></span></span></p>\r\n\r\n<p><span style=\"\"color:#e9454a\"\"><span style=\"\"font-size:16px\"\"><strong>Jusqu&rsquo;&agrave; -5% en haute saison</strong></span></span></p>\r\n\r\n<p><span style=\"\"color:#e9454a\"\"><span style=\"\"font-size:16px\"\"><strong>Frais de dossier de 25&euro; offerts</strong></span></span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"\"font-size:12px\"\">R&eacute;servez sur le site <a href=\"\"https://www.homair.com/\"\">homair.com</a> ou par t&eacute;l&eacute;phone au 04 84 39 08 50 en indiquant votre code : </span></p>\r\n\r\n<p><span style=\"\"font-size:24px\"\"><span style=\"\"color:#ffffff\"\"><strong><span style=\"\"background-color:#e9454a\"\">&nbsp;BESSON63&nbsp;&nbsp;</span></strong></span></span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p style=\"\"text-align:left\"\"><span style=\"\"color:#999999\"\"><span style=\"\"font-size:10px\"\">&nbsp;* Le code partenaire vous offre les avantages suivants (pour tout s&eacute;jour de 7 nuits minimum) cumulable avec de nombreuses promotions (Early Booking, ventes flash, derni&egrave;re minute&hellip;) :</span></span></p>\r\n\r\n<p><span style=\"\"color:#999999\"\"><span style=\"\"font-size:10px\"\">✔ -15% en basse et moyenne saisons</span></span></p>\r\n\r\n<p><span style=\"\"color:#999999\"\"><span style=\"\"font-size:10px\"\">✔ -5% en haute saison</span></span></p>\r\n\r\n<p><span style=\"\"color:#999999\"\"><span style=\"\"font-size:10px\"\">✔ les frais de dossier de 25&euro; offerts </span></span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"\"color:#999999\"\"><span style=\"\"font-size:10px\"\">Comment r&eacute;server ? </span></span></p>\r\n\r\n<p><span style=\"\"color:#999999\"\"><span style=\"\"font-size:10px\"\">Soit en se connectant au site web www.homair.com en renseignant le code partenaire BESSON63 lors de la finalisation de la r&eacute;servation. Acc&eacute;dez au process d&eacute;taill&eacute; de r&eacute;servation en ligne &gt;</span></span></p>\r\n\r\n<p><span style=\"\"color:#999999\"\"><span style=\"\"font-size:10px\"\">Soit par t&eacute;l&eacute;phone au 04 84 39 08 50 (n&deg; non surtax&eacute;) en indiquant le code partenaire BESSON63. </span></span></p>"
        untilDate:
          type: string
          examples:
            - '2024-02-19'
    GetSponsorshipsResponse:
      type: object
      properties:
        description:
          type: string
          examples:
            - "<p>This is a description with <strong>HTML</strong> content.</p>"
        terms:
          type: string
          examples:
            - "Conditions générales"
        coupons:
          type: string
          examples:
            - - id : "d9235adf"
                name: "COUPON_PARRAIN"
                barcode : "d9235adf"
                image: 
                  light: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/offers/offre%20parrain%20light.png"
                  dark: "https://besson-assets.fra1.cdn.digitaloceanspaces.com/offers/offre%20parrain%20dark.png"
                description: "TODO"
                isActive: true
                expirationDate: "11/12/2024"
        godchildren:
          type: string
          examples:
            - - email : "referral1@example.com"
                status: "pending"
              - email : "referral2@example.com"
                status: "validated"
              - email : "referral3@example.com"
                status: "expired"